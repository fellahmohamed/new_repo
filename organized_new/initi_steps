1 _ prerequisites :
  - check minikube 
  	minikube version
  - check kubectl 
  	kubectl version --client
  - check docker 
  	docker --version
2 _ start :
  
  - start Minikube 
  	 minikube start --cpus=4 --memory=8192 --addons=metrics-server
  
  - check minikube status
  	minikube status
3 _ clone and deploy :

	git clone https://github.com/GoogleCloudPlatform/microservices-demo.git
	cd microservices-demo
  - go to the kube manifests :
  	cd ./release
  
  - apply the deployements
  	kubectl apply -f kubernetes-manifests.yaml

  - Verify pods 
        kubectl get pods 
	 --watch to see change
	 	
  -(optional) kubernetes dashboard:
  	minikube dashboard
  	
4 _ grafana :
	minikube service promstack-grafana -n monitoring

 1. Apply HPA config
kubectl apply -f hpa-config.yaml

 2. Run high-load test
locust -f enhanced_locust.py --host=http://192.168.49.2:30234 --users 100 --spawn-rate 5 --run-time 5m --headless (remember to verify the url minikube service frontend --url)

3 monitor the hpa (pods created):
watch -n 5 'kubectl get hpa'

4 monitor specific pods :
watch -n 5 'kubectl get pods | grep frontend'

# Manually scale down (for testing purposes)
kubectl scale deployment frontend --replicas=1
kubectl scale deployment recommendationservice --replicas=1

# Check current HPA status and history
kubectl describe hpa frontend-hpa
kubectl describe hpa recommendationservice-hpa



----------------------------------------
Metrics collection :
 - collect_metrics.sh (script for collecting metrics in csv format)
		chmod +x collect_metrics.sh
		./collect_metrics.sh "test_collection" 30

- current metrics used 
  kubectl top pod

	- limits of containers
		kubectl get pods -n default -o custom-columns="NAME:.metadata.name,CPU_REQUEST:.spec.containers[*].resources.requests.cpu,MEM_REQUEST:.spec.containers[*].resources.requests.memory,CPU_LIMIT:.spec.containers[*].resources.limits.cpu,MEM_LIMIT:.spec.containers[*].resources.limits.memory"

